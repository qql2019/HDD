/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.52
 * Generated at: 2019-01-14 06:27:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class dept_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Basic Layout - jQuery EasyUI Demo</title>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/easyui.css\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/icon.css\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/icon.css\">\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"css/demo.css\">\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/jquery.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"js/jquery.easyui.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t$(function() {\r\n");
      out.write("\t\t//设置数据表格控制事件\r\n");
      out.write("\t\t$('#dg').datagrid({\r\n");
      out.write("\t\t\ttitle : '部门详细列表',\r\n");
      out.write("\t\t\ticonCls : 'icon-edit',\r\n");
      out.write("\t\t\turl : 'dept/getdeptsjson.do',\r\n");
      out.write("\t\t\tqueryParams : {\r\n");
      out.write("\t\t\t\tpage : 1,\r\n");
      out.write("\t\t\t\trows : 10\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tborder : true,\r\n");
      out.write("\t\t\twidth : 700,\r\n");
      out.write("\t\t\theight : 'auto',\r\n");
      out.write("\t\t\tstriped : true,//显示条纹\r\n");
      out.write("\t\t\tnowrap : true,\r\n");
      out.write("\t\t\tcollapsible : false,//不折叠\r\n");
      out.write("\t\t\tfit : true, //表格填充整个区域\r\n");
      out.write("\t\t\tfitColumns : true,//表格的列填充合适的区域\r\n");
      out.write("\t\t\tsingleSelect : false,//是否单选\r\n");
      out.write("\t\t\trownumbers : true,//行号\r\n");
      out.write("\t\t\tpagination : true,//分页控件\r\n");
      out.write("\t\t\ttoolbar : \"#toolbar\"\r\n");
      out.write("\r\n");
      out.write("\t\t});\r\n");
      out.write("\r\n");
      out.write("\t\tvar p = $('#dg').datagrid('getPager');\r\n");
      out.write("\t\t$(p).pagination({\r\n");
      out.write("\t\t\tpageSize : 10,//页记录数\r\n");
      out.write("\t\t\tpageList : [ 5, 10, 15, 20 ],//每页可选多少条记录\r\n");
      out.write("\t\t\tbeforePageText : '第',//页数文本框前显示的字\r\n");
      out.write("\t\t\tafterPageText : '页  共{pages}页',\r\n");
      out.write("\t\t\tdisplayMsg : '当前显示{from}-{to}条记录 共 {total}条记录'\r\n");
      out.write("\r\n");
      out.write("\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("\t//对话框提交按钮提交表单\r\n");
      out.write("\tvar url;\r\n");
      out.write("\tfunction newDept() {\r\n");
      out.write("\t\t$('#dlg').dialog('open').dialog(\"setTitle\", \"部门信息\");\r\n");
      out.write("\t\turl = (\"dept/save.do\");\r\n");
      out.write("\t}\r\n");
      out.write("\t//点击save按钮事件\r\n");
      out.write("\tfunction saveDept() {\r\n");
      out.write("\t\t$('#fm').form(\"submit\", {\r\n");
      out.write("\t\t\turl : url,\r\n");
      out.write("\t\t\tonSubmit : function() {\r\n");
      out.write("\t\t\t\treturn $(this).from(\"validate\");\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tsuccess : function(result) {\r\n");
      out.write("\t\t\t\tif (result.errorMsg) {\r\n");
      out.write("\t\t\t\t\t$.messager.alert(\"系统提示\", result.errorMsg);\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t$.messager.alert(\"系统提示\", \"保存成功\");\r\n");
      out.write("\t\t\t\t\t//表格数据更新\r\n");
      out.write("\t\t\t\t\t$(\"#dg\").datagrid(\"reload\");\r\n");
      out.write("\t\t\t\t\t//清空对话框\r\n");
      out.write("\t\t\t\t\tresetValue();\r\n");
      out.write("\t\t\t\t\t$('#dlg').dialog(\"close\");\r\n");
      out.write("\t\t\t\t\t$('#dlg').dialog(\"roload\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction resetValue() {\r\n");
      out.write("\t\t$('#dname').val(\"\");\r\n");
      out.write("\t\t$('#loc').val(\"\");\r\n");
      out.write("\t}\r\n");
      out.write("\t//删除记录\r\n");
      out.write("\tfunction deleteDept() {\r\n");
      out.write("\t\t//得到行号数组\r\n");
      out.write("\t\tvar selectedRows = $('#dg').datagrid('getSelections');\r\n");
      out.write("\t\t//当没有选中\r\n");
      out.write("\t\tif (selectedRows.length == 0) {\r\n");
      out.write("\t\t\t$.messager.alert(\"系统提示\", \"请选择要删除的数据\");\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t//记录被删除信息编号\r\n");
      out.write("\t\tvar strIds = [];\r\n");
      out.write("\t\tvar rowindex = [];\r\n");
      out.write("\t\tfor (var i = 0; i < selectedRows.length; i++) {\r\n");
      out.write("\t\t\tstrIds.push(selectedRows[i].deptno);\r\n");
      out.write("\t\t\tvar index = $(\"#dg\").datagrid(\"getRowIndex\", selectedRows[i]);\r\n");
      out.write("\t\t\t//保存信息\r\n");
      out.write("\t\t\trowindex.push(index);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tvar ids = strIds.join(\",\");\r\n");
      out.write("\t\t$.messager\r\n");
      out.write("\t\t\t\t.confirm(\r\n");
      out.write("\t\t\t\t\t\t\"系统提示\",\r\n");
      out.write("\t\t\t\t\t\t\"您确定要删除这\" + selectedRows.length + \"条记录吗？\",\r\n");
      out.write("\t\t\t\t\t\tfunction(r) {\r\n");
      out.write("\t\t\t\t\t\t\tif (r) {\r\n");
      out.write("\t\t\t\t\t\t\t\t$\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t.ajax({\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\turl : 'dept/delete.do',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\ttype : \"POST\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tdataType : \"json\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tdata : {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tids : ids\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tbeforeSend : function() {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t$.messager.progress({\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\ttext : '处理中。。。。。'\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tsuccess : function(result) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t$.messager.progress('close');\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tresult = eval('(' + result\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ ')');\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(result);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\tif (result.success) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\tfor (var i = rowindex.length - 1; i >= 0; i--) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t$(\"#dg\").datagrid(\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'deleteRow',\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trowindex[i]);\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t$.messager\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.alert(\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"系统提示\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"您已经成功删除了\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ selectedRows.length\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ \"条记录\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t$.messager\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.alert(\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"系统提示\",\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselectedRows[result.errorIndex].deptno\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ \"条记录出错，原因是\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t+ result.errorMsg);\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\tasync : false\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t\t\t\t//表格数据更新\r\n");
      out.write("\t\t\t\t\t\t\t\t$('#dg').datagrid(\"reload\");\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tfunction editDept() {\r\n");
      out.write("\t\t//得到选择行号数组\r\n");
      out.write("\t\tvar selectedRows = $('#dg').datagrid('getSelections');\r\n");
      out.write("\t\t//判断是否有一条且只能有一条记录选择\r\n");
      out.write("\t\tif (selectedRows.length != 1) {\r\n");
      out.write("\t\t\t$.messager.alert(\"系统提示\", \"请确保只选择一条记录！\");\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\tvar row = selectedRows[0];\r\n");
      out.write("\t\t$('#dlg').dialog(\"open\").dialog(\"setTitle\", \"编辑部门信息\");\r\n");
      out.write("\t\t// 从选择记录中提取dname和loc变量的值，赋给对应输入框中\r\n");
      out.write("\t\t$('#dname').val(row.dname);\r\n");
      out.write("\t\t$('#loc').val(row.loc);\r\n");
      out.write("\t\t// 定义提交的路径\r\n");
      out.write("\t\turl = \"dept/update.do?deptno=\" + row.deptno;\r\n");
      out.write("\r\n");
      out.write("\t}\r\n");
      out.write("\t//搜索部门\r\n");
      out.write("\tfunction searchDeptByDname() {\r\n");
      out.write("\t\t$('#dg').datagrid('load', {\r\n");
      out.write("\t\t\tdname : $('#s_dname').val()\r\n");
      out.write("\t\t});\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<table id=\"dg\" style=\"width: 100%; height: 100%\">\r\n");
      out.write("\t\t<thead>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th data-options=\"field:'ck',checkbox:true\">全选</th>\r\n");
      out.write("\t\t\t\t<th data-options=\"field:'id',align:'right'\" width=\"80\">部门编号</th>\r\n");
      out.write("\t\t\t\t<th data-options=\"field:'name'\" width=\"100\">部门名称</th>\r\n");
      out.write("\t\t\t\t<th data-options=\"field:'sex'\" width=\"80\">部门位置</th>\r\n");
      out.write("\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</thead>\r\n");
      out.write("\t</table>\r\n");
      out.write("\t<div id=\"toolbar\">\r\n");
      out.write("\t\t<a href=\"javascript:void(0)\" class=\"easyui-linkbutton\"\r\n");
      out.write("\t\t\ticonCls=\"icon-add\" plain=\"true\" onclick=\"newUser()\">新建用户</a> <a\r\n");
      out.write("\t\t\thref=\"javascript:void(0)\" class=\"easyui-linkbutton\"\r\n");
      out.write("\t\t\ticonCls=\"icon-edit\" plain=\"true\" onclick=\"editUser()\">编辑用户</a> <a\r\n");
      out.write("\t\t\thref=\"javascript:void(0)\" class=\"easyui-linkbutton\"\r\n");
      out.write("\t\t\ticonCls=\"icon-remove\" plain=\"true\" onclick=\"destroyUser()\">删除用户</a>\r\n");
      out.write("\t\t&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;部门名称：&nbsp;<input type=\"text\"\r\n");
      out.write("\t\t\tname=\"s_dname\" id=\"s_dname\" />&nbsp; <a href=\"javascript:void(0)\"\r\n");
      out.write("\t\t\tclass=\"easyui-linkbutton\" iconCls=\"icon-search\" plain=\"true\"\r\n");
      out.write("\t\t\tonclick=\"searchDeptByDname()\">搜素</a>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div id=\"dlg\" class=\"easyui-dialog\"\r\n");
      out.write("\t\tstyle=\"width: 400px; height: 280px; padding: 10px 20px\" closed=\"true\"\r\n");
      out.write("\t\tbuttons=\"#dlg-buttons\">\r\n");
      out.write("\t\t<form id=\"fm\" method=\"post\">\r\n");
      out.write("\t\t\t<table>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td>部门名称:</td>\r\n");
      out.write("\t\t\t\t\t<td><input type=\"text\" name=\"dname\" id=\"dname\"\r\n");
      out.write("\t\t\t\t\t\tclass=\"easyui-validatebox\" required=\"true\"></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td>部门位置:</td>\r\n");
      out.write("\t\t\t\t\t<td><input type=\"text\" name=\"loc\" id=\"loc\"\r\n");
      out.write("\t\t\t\t\t\tclass=\"easyui-validatebox\"></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<div id=\"dlg-buttons\">\r\n");
      out.write("\t\t<a href=\"#\" class=\"easyui-linkbutton\" iconCls=\"icon-ok\"\r\n");
      out.write("\t\t\tonclick=\"saveDept()\">Save</a> <a href=\"#\" class=\"easyui-linkbutton\"\r\n");
      out.write("\t\t\ticonCls=\"icon-cancel\" onclick=\"javascript:$('#dlg').dialog('close')\">Cancel</a>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
